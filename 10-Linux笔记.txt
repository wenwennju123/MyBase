Linux
**********************************************************************************************
Ubuntu---远程开发
	CentOS于2020年左右停止维护，戒指版本是 CentOS7

使用VMware安装ubuntu
设置：resolution 显示
		language 语言支持 不推荐安装中文包
		Region & Language 设置地区和语言和输入法
		Date & Time 设置时区

安装软件：终端 命令行 ctrl + alt + t 打开终端 使用自带的 apt 安装包管理器
	
	安装docker
	sudo apt install docker.io

	查看docker版本号 
	docker -v
	测试docker使用，运行远程镜像
	sudo docker run hello-world

	ifconfig 查看虚拟机ip地址
	也可以使用网络设置中的 ip 来查看
	虚拟机：192.168.214.128
	然后在本地电脑 cmd ping 上述ip 检测网路是否通畅 即可以访问虚拟机

	使用ssh服务器保证linux虚拟机与本机保持链接
	在linux系统中提供ssh服务
	sudo apt-get install openssh-server
	查看ssh服务是否开启
	ps -ef | grep ssh
	
	检查软件版本环境
	sudo apt update

	安装Java环境 JDK8
	sudo apt install openjdk-8-jdk
	检查是否安装成功
	java
	java -version

	安装管理工具Maven
	sudo apt install maven
	检查是否安装成功
	mvn -v

远程开发的步骤，阶段
	编写代码----文件同步----代码运行----编译构建----部署----调试


远程开发：远程部署
	通过文件同步的方式，将代码同步到Linux上
	项目启动时，本地电脑远程连接Linux服务器，通过远程执行命令的方式编译代码，然后运行

学了springboot小项目后 实验




**********************************************************************************************
简介：免费开源，稳定性，安全性好。多并发能力强。很多企业项目，集群项目都是部署在Linux系统上

主要发行版本：
	Ubuntu、RedHat、CentOS、                       Debain、Fedora、SuSE、OpenSuSE、红旗

Ubuntu
	Ubuntu是目前最流行的Linux发行版之一。它基于Debian，提供图形化用户界面和易用的安装程序，
	适合新手使用。Ubuntu有长期支持版本和普通版本等多个版本，社区支持良好，拥有庞大的软件库。
CentOS
	CentOS是一个基于Red Hat Enterprise Linux（RHEL）的Linux发行版，是一种免费的企业级操作系统。
	它提供长期支持和高度稳定性，适合于服务器应用。体积较小，灵活。

Red Hat Enterprise Linux（RHEL）
	RHEL是一种商业Linux发行版，提供长期支持，适用于企业级应用。
	它提供了高度稳定和安全的环境，并且拥有广泛的硬件和软件支持。
Debian
	Debian是一个稳定、自由且可靠的Linux发行版，以稳定性和安全性著称。
	它使用APT（Advanced Packaging Tool）作为软件包管理器，拥有庞大的软件库和强大的社区支持。
Fedora
	Fedora是一个由社区支持的免费Linux发行版，它基于Red Hat Enterprise Linux。
	Fedora更新频繁，拥有较新的软件包和内核版本，适合开发者和技术爱好者。

**********************************************************************************************
Linux 是一种操作系统，用来管理计算机的硬件和软件资源的系统软件
	Linux注重安全性、稳定性，高并发处理能力强于windows

	1991年开发 李纳斯 Linux 内核程序

安装：CentOS
	虚拟机：可以使用软件模拟出一套具有完整硬件系统功能的，运行在一个完全隔离环境中的完整计算机系统
	安装CentOS-7镜像
	centos使用的是 yum 软件包管理


	打开终端，安装docker
	sudo yum update
	sudo yum install docker
	docker version

	sudo systemctl start docker
	sudo docker run hello-world

ifconfig
	centos虚拟机ip
	192.168.214.129

**********************************************************************************************
Linux文件结构*****重点
	文件目录，子目录。系统文件，用户文件。配置文件，可执行文件......
	都有明确的规则与权限。

	Linux只有一个根目录，根下有各种子目录，采用层级式目录结构（类比树）
	根                   /
	顶层/root       /bin	/boot    /dev    /etc    /home    /var    /lib    /usr    /media    ......
	下一层部分 /root/Desktop   /root/Maildir ......         /usr/bin     /usr/lib  ......

	1、root 该目录为系统管理员目录，root是具有超级权限的用户
********2、bin -> usr/bin  Linux系统做了链接，连接到后者。
		usr/bin 用来存放系统预装的可执行程序，此目录下存放的可执行文件可以在系统的任何目录下执行
		也就是说Linux默认的系统路径path 就是 usr/bin
	3、usr  是Linux的系统资源目录，用来存放一些系统可执行文件或者系统
********4、usr/local/bin：存放用户自己的可执行文件，同样这里存放的可执行文件可以在系统的任何目录下执行。
	5、lib->usr/lib: 这个目录存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件，几乎所有的应用程序都需要用到这些共享库。
	6、boot : 这个目录存放启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。
	7、dev: dev是Device(设备)的缩写, 该目录下存放的是Linux的外部设备，Linux中的设备也是以文件的形式存在
********8、etc: 这个目录存放所有的系统管理所需要的配置文件。
		/etc/profile  配置环境变量
********9、home：用户个人的根目录，在Linux中，每个用户都有一个自己的目录，
		一般该目录名以用户的账号命名，叫作用户的根目录；用户登录以后，默认打开自己的根目录。
		这个目录用来保存用户私人的数据
	10、var : 这个目录存放着在不断扩充着的东西，我们习惯将那些经常被修改的文件存放在该目录下，
		比如运行的各种日志文件。
	11、mnt : 系统提供该目录是为了让用户临时挂载别的文件系统，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容
********12、opt: 这是给linux额外安装软件所存放的目录。
		比如你安装一个Oracle数据库则就可以放到这个目录下，默认为空。mysql tomcat maven等等
	13、tmp: 这个目录是用来存放一些临时文件的。

**********************************************************************************************
Linux终端常用命令
	Ctrl + L 清屏
	Ctrl + Alt + T 打开终端

	rm -rf /usr/...  移除目录
	rm -rfv /usr/...  移除目录 以详细模式执行
	find 文件   查找
	lsof /user/... 查看该目录文件的占用情况

	cd /  切换到根目录
	cd 目录名 在当前目录下切换到其子目录
	pwd 查看当前目录
	ls  查看目录下都有哪些子目录
	cd bin  切换到bin目录    
		bin目录下的文件，都是可以执行的命令，例如可以找到ls  pwd  python java等等
	mkdir 文件名 在当前目录下创建对应文件名的一个目录，注意 只需要输入名字
	......

通过命令行查看已安装的软件：centos
	查看所有已安装的软件列表
	rpm -qa
	rpm -qa | less   分页查询列表
	rpm -qa > /tmp/rpm-list.txt   导出查询结果文本
	rpm -qa | grep <package_name>   查找对应名称的软件包
	如果不确定完整的软件包名称，可以尝试使用通配符来进行模糊匹配。
	通配符 * 可以代表任意字符序列，可以在 grep 命令中使用它来查找部分匹配的软件包名称。
	rpm -qa | grep '^nginx'  查找以nginx开头的软件包 ‘nginx*’也可以
********在linux中，这种查找可以使用 正则表达式 来限制
	
	使用yum软件包管理可以更加方便的查找
	yum search nginx
	只显示描述信息的话，使用grep命令过滤输出
	yum search nginx | grep -i nginx

	查看指定软件的版本信息
	rpm -q <package_name>
	查看指定软件的详细信息
	rpm -qi <package_name>
	查看指定软件的文件列表
	rpm -ql <package_name>
	rpm -qal <package_name> 参数可以组合使用

	卸载指定软件
	yum remove <package_name>

**********************************************************************************************
Linux远程操作
	Xshell：可以远程模拟linux的控制台终端
		建立链接，使用ifconfig命令查看ip地址
		192.168.214.129
		查看centos上是否启用ssh服务，命令：systemctl status sshd
		Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor preset: enabled)
		enabled表示已经启用
		启用ssh服务，命令：systemctl enable sshd

	Xftp：	用于本地系统与linux系统之间文件的传输
		比如应用的发布，war包安装，软件安装。以及日志文件下载等等

	官网：https://www.netsarang.com

	安装软件：将linux版本的安装包传输到linux系统的  /opt  目录下
		注意文件的权限 使用root账号登录拥有全部权限
		使用chmod命令更改目录的权限
		sudo chmod 777 /目标路径    全部开放谨慎使用
		在对应文件目录使用 ls -l 命令 可以查看每个目录和文件的权限
		
**********************************************************************************************
Linux系统管理
	vi  vim   Linux自带的文本编辑器（文本文件  对应   二进制文件）
	用法：可以创建、查看、编辑文本文件
	命令：vim 文件名   如果不存在则创建，然后打开文件
	
	vim打开文件时，具有三种模式：
		一般模式（命令打开默认进入）只能查看，不能写
		编辑模式： i 键（对应Insert）或 a键 或 I 或 A   不可以保存编辑的内容
			退出编辑模式 按 Esc
		命令行模式： 在一般模式下 按 shift + ：最下行会显示 ：等待输入指令
			命令：	q！ 不保存并强制退出编辑器
				wq  保存并退出编辑器
				q   只退出编辑器，如果有修改，必须使用上面两种
	快捷键：
		复制当前行：一般模式下 yy 将光标所在的行复制到剪切板
		复制多行：一般模式下 比如5行 按 5yy 将光标所在行算在内的往下5行，复制到剪切板
		粘贴：一般模式下 p 将剪切板中的内容粘贴到光标所在的下一行
		在文本文件中查找关键字： 在命令行模式下，输入 / 查找的关键字
			会将查找到的关键字高亮背景显示
			按 n 表示将光标切换到下一个查找到的关键字
		删除一行：一般模式下 dd
		删除多行：一般模式下 以5行举例 5dd
		撤销上次编辑的内容：一般模式下 u
		显示行号：命令行模式下 set nu
		隐藏行号：命令行模式下 set nonu

**********************************************************************************************
Linux的用户管理
	必须使用合法账户（具备用户名和密码）登录后，才可以使用Linux操作系统，使用其中的系统资源
	root是linux系统安装时，默认创建的系统管理员超级管理员账号。
	由root创建普通的账号，或者具有创建用户权利的账号
	
	添加用户 命令：  useradd 用户名
		注意 所有用户会在/home 目录下，有一个自己的目录，其个人的内容会存在其目录下，由系统自动创建
			管理员的 /root 直接在根目录有
		并会创建一个组，如果不指定组，默认创建组是使用用户名命名，lisi组。
			在Linux中，每一个用户都至少属于一个组，用户不能独立于组存在
	
	创建用户时，指定其根目录 命令：useradd -d 指定目录 用户名 
		举例： useradd -d /home/ww wangwu
		不易管理，使用较少

	给用户设置密码 命令： passwd 用户名
		过于简单，系统化，基于字典单词（PAM模块 身份验证）等的密码是无效的

	删除用户 命令： userdel 用户名
		权限 超级管理员或者提供权限
		原有 /home 目录下的目录不会被自动删除

	删除用户同时，级联删除其个人文件 命令： userdel -r 用户名
		使用recursion递归实现删除

	查看用户信息 命令：id 用户名
		基本信息：用户自己的标识id，所属的主组（一般是创建的时候分配，只有一个且不能更改），
					所属的所有附加组（一个用户可以同时属于多个组）

	切换用户 命令： su 用户名

查看Linux系统中都有哪些用户（包含系统用户和服务用户等）
	cat /etc/passwd   用户详细信息，每一行代表一个用户账号，字段之间使用冒号（:）分隔。
		通常，第一个字段是用户名，第三个字段是用户ID（UID），
		第四个字段是所属组ID（GID），第五字段是用户描述，
		第六字段是用户的家目录路径，第七字段是默认的Shell。
	cut -d: -f1 /etc/passwd    只看用户名
	getent passwd 用户详细信息

Linux的组管理（组相当于 权限管理的 角色）
	可以对有共性的用户进行统一管理
	每一个用户至少属于一个组，可以同时属于多个组，不能独立于组存在
	root用户属于root组
	无法将用户从主组中移除

	添加组 命令： groupadd 组名

	删除组 命令：groupdel 组名

	将用户添加到组中 命令：gpasswd -a 用户名 组名

	将用户从组中移除 命令：gpasswd -d 用户名 组名

	创建用户时，指定所属的组（主组）命令： useradd -g 组名 用户名	

查看Linux系统中都有哪些组（包含系统组和服务组等）
	cat /etc/group   组详细信息，每一行代表一个组，字段之间使用冒号（:）分隔。
		通常，第一个字段是组名，第二个字段是组密码（通常为空），
		第三个字段是组ID（GID），后续字段是该组包含的用户列表。
	cut -d: -f1 /etc/group    只看组名
	getent group 组详细信息

**********************************************************************************************
Linux的系统操作命令
	shutdown now 立即关机
	shutdown -h xxx 定时关机
	shutdown -r now 立即重启
	reboot 立即重启
	sync 同步数据库，可以

Linux的帮助命令
	很多软件的帮助命令是 help 
	man 命令名称
		用来查看Linux系统手册上的帮助信息 回车翻一行 空格翻一页 q退出查看
	help 命令名称
		用来查看命名内置的帮助信息，一些开发人员写的注释等
	
**********************************************************************************************
Linux的文件和目录操作命令

查看文件或目录
	pwd  查看当前所在目录，从根目录开始
	ls  查看当前或指定目录下的所有内容（子目录和文件）
	ls -l 查看当前或指定目录下的所有内容的详细信息
		以列表形式查看，主要包含：权限，修改时间，创建者，拥有者，文件大小
	ls -a 列出当前或指定目录下，所有的子目录和文件，包括虚拟的，隐藏的目录和文件
		(举例 ../ 是上一层目录的引用  ./ 是当前目录的引用 类比 super和this 即使是根目录也会有这两个)
	ls -a -l 或者 ls -al  综合以上两种效果

	cd 目录名  用来切换到指定的目录
		目录写法：绝对目录、相对目录
		绝对目录：以盘符开始，Linux就是根目录 / 
			cd /opt/test
		特殊的绝对目录 cd ~ 
			管理员 /root
			普通用户 /home/用户
		相对目录：以目录名开始，
			在opt目录下 cd test
		特殊的相对目录 cd ..
			从当前目录出发，去到上一级目录
		特殊的相对目录 cd .
			当前目录，例如指定当前目录下的可执行文件来执行 ./run.exe
	mkdir 目录名  创建目录
		可以是绝对目录，也可以是相对目录
		使用相对目录，则需要进入想要创建的目录，在其下创建
		注意：如果需要一次创建多级目录，如果上一级不存在则级联创建，需要添加参数 -p  意为递归创建
		mkdir -p /opt/test1/test2/test3
		Linux中 任何一个路径 都具有两种写法

创建文件 
	vim 创建一个文本文件并打开

	touch 文件名（全名）列表（使用空格隔开） 创建一个或多个 空文件
		举例 touch t1.txt t2.txt t3.txt

复制文件
	cp source（源） dest（目标目录） 将源复制到对应目标目录下
	注意 源可以是目录，但是源里面有子目录或文件时，默认情况无法复制
	需要添加参数 -r 意为递归复制
	举例 cp -r test test3  递归复制目录
	注意 如果复制重复的，会提示信息让使用者确认

删除文件或目录
	rm 文件名或目录名   提示删除
	取消提示可以添加参数 -f 代表强制删除
	默认情况无法删除目录，因为底层目录和文件的存储方式是不同的
		需要添加参数 -r 递归删除  会从里向外依次删除
	rm -rf 递归强制删除

移动文件
	mv source（源） dest（目标目录） 将源移动到对应目标目录下
	注意 linux允许将文件移动到文件，目标文件会被覆写，也就相当于将源文件重命名并删除了目标文件
	
重命名文件
	mv 文件名 新的文件名
	举例 mv test.txt test_new.txt
	新的文件名在当前目录下是不存在的，系统会自动创建一个空的文件。然后被源文件覆写，达到重命名文件的效果

查看文件内容
	cat 文件名
	区别于vim的文本编辑，cat命令是直接将文本输出到控制台

分页查看文件内容
	more 文件名  一次性加载文件所有内容到内存，并分页显示

分页查看文件内容
	less 文件名  分页加载文件到内存，并分页显示

查看文件开肉
	head 文件名 默认查看文件前10行
	head -n 5 查看文件开头前5行

查看文件末尾
	tail 文件名   默认查看末尾10行
	tail -n 5 文件名  查看文件末尾5行

**********************************************************************************************
输出一个系统变量或者常量的值 到命令行终端
	写shell脚本时候常用
	echo $变量名 
	举例 JAVA_HOME PATH CLASSPATH 配置时，windows中，可以使用 %JAVA_HOME% 来引用这个环境变量
	echo Hello World！
	会输出 Hello World！
	类比sout print等 是一种输出函数

> 运算符 可以看做一种指令（覆盖）
	查看命令 > 文件名
	向指定文件中填写前一个命令的输出结果（查看的结果默认输出到控制台）
	ls -al > text.txt   文件不存在则会新建，已存在则会覆盖
・	cat text1.txt > text2.txt  将text1.txt中全部内容，覆盖到text2.txt中

>> 运算符 可以看做一种指令（追加）
	查看命令 >> 文件名
	向指定文件中，追加 前一个命令的输出结果
	文件不存在则会新建。文件已存在则在原来的基础上进行追加

**********************************************************************************************
时间和日期的操作命令
时间
	date 查看系统当前完整的日期和时间
	date +%Y 系统当前年份    Fri Dec  8 07:35:45 CST 2023
	date +%m 系统当前月份
	date +%d 系统当前日期
	
	date ‘+%Y-%m-%d %H:%M:%S’ 按yyyy-MM-dd HH:mm:ss 格式来显示

	date -S '2020-10-20 10:20:30' 设置系统时间
日历
	cal 查看当前月份的日历
	cal 2020 查看指定年份的每一个月的日历

**********************************************************************************************
查找指令 find
	默认使用名称关键字搜索文件或目录，默认是在当前目录下进行查找，可以使用通配符
	find 指定目录 搜索标准 关键字
			|->  -name 按名称（文件或者目录所在的路径也在搜索范围之内）
			|->  -size 按大小
			|->  -user 按所有者
	find *.txt
	find *e* 搜索当前目录下，所有 名称中包含e的那些文件和目录
	想要使用正则表达式，则需要使用 -regex选项，并且是基于Emacs的正则语法
	
	依照文件大小搜索
	find /etc -size +5M 表示搜索大小大于5M的文件 （+ 代表大于   - 代表小于）

	依照所有者搜索
	find /etc -user zhangsan

	find搜索会遍历指定目录下所有文件，逐一判断是否符合搜索条件

定位指令 locate
	locate 文件名 
		用来快速在整个系统中，定位对应文件名的路径。利用实现建立的系统中所有文件名称以及路径的
		locate数据库来快速定位，无需遍历整个文件系统。故此locate数据库必须定期更新时刻。
		Linux底层维护的是一个目录树，locate可以直接通过树来定位内存，效率较高
		因此没有查找范围，是直接在整个目录结构中进行查找
		可以理解为生成索引以及维护索引
		更新命令 updatedb

搜索过滤命令（常用）
	grep 在前一个搜索命令的结果中，按照名称进一步过滤，区分大小写
		搜索命令 | grep 过滤条件
		查看命令 | grep 过滤条件
	find /etc -size -10k | grep firefox
		查找 /etc 目录下的 大小小于 10k 的 名字中含有 firefox 的文件
	查看命令是按照 行 为单位过滤，显示含有对应关键字的行
	grep -i beijing  表示忽略大小写 进一步过滤

	ls -al | prep new 列表显示当前目录下所有 包含 new 的文件的详细信息，

**********************************************************************************************
文件的压缩和解压缩指令
	gzip 文件名   生成.gz的压缩包，并且会把原来的文件删除
	gunzip 文件名  解压.gz压缩包，并且删除原来的.gz压缩包
		压缩 解压缩 单个文件
	
	比较常用的，通常使用.zip
	zip 目标压缩包名称 文件名或目录列表     对多个文件或目录进行压缩（打包） 后缀可以使.gz也可以是.zip
		都是需要后缀的
	unzip 压缩文件名 -d 指定解压到的目录名称
		不提供指定目录则解压到当前文件目录下，并且解压不会删除原来的压缩文件
	
********十分常用
	tar 压缩（打包）多个文件和目录
		|-> c  打包或者压缩
		|-> x  解压
		|-> z  打包同时压缩
		|-> v  显示详细信息
		|-> f  指定压缩后的文件名

		tar -zcvf  目标压缩包名.tar.gz  文件或目录列表
		tar -zxvf  压缩包名(.tar.gz) -C  解压目录名
			不提供目录则默认解压到当前文件目录下

**********************************************************************************************
使用ls -l 时 详情列表会查到
权限位 所有者 所属的组 修改时间 文件名 

Linux的组管理
	每一个用户都至少属于一个组，但是一个用户可以属于多个组

	每一个文件或者目录页必须属于一个组，且只能属于一个组。
	
	文件或者目录 通过组来控制哪些用户可以对它进行哪些操作，即文件或目录的访问权限
	Linux系统中所有的用户分为三类（文件，目录看来）
		所有者；默认情况下，文件或目录的所有者都是创建者，可以修改
		同组用户：与文件或目录属于同一个组的用户
		其他组用户：既不是所有者，也不是同组的用户		

	文件或目录 可以依据这三类用户，进行权限管理

修改文件的所有者
	chown 新的所有者 文件名
	chown 新的所有者:新的组 文件名
		 参数 -R 递归修改目录的所有者和所在的组

修改文件的所在组
	chgrp 新的组 文件名
		 参数 -R 递归修改目录的所有者和所在的组

**********************************************************************************************
Linux的权限管理    重点
	任何文件或者目录都有三种权限
	并且每个目录和文件都有独立的权限控制，不同层级的目录可以设置不同的访问权限
		读 read   
		写 write  
		执行 execute Linux中是shell脚本 后缀 .sh

	文件的三种权限
		读 read  可以读取、查看文件的内容，比如cat more less head tail等命令
		写 write   可以修改文件的内容 比如vim
		执行 execute  可以执行可执行文件 .sh

	目录的三种权限
		读 read 可以读取，查看目录下的内容 例如 ls 命令
		写 write 可以修改目录中的内容，创建子目录，删除子目录，创建文件，删除文件，重命名等操作
		执行 execute 可以进入该目录 比如 cd 切换目录命令

	使用r w x 分别表示读，写，执行的权限
	举例：rwx 可以读写执行  r-x 读写    w--  只读   --- 无权限

	文件的增删与目录权限相关，文件的读写与文件权限相关

文件或目录的权限控制
	Linux中，任何一个文件或者目录都有三部分权限，所有者权限，同组用户权限，其他组用户权限
	第一部分权限：所有者权限，文件或者目录的所有者对该文件拥有的权限
		参数 u
		举例 u+x 增加拥有者的执行权限
			
	第二部分权限：同组用户权限，文件或者目录的同组用户对该文件拥有的权限
		参数 g
		举例 g+w 增加同组用户的写权限 g-x 移除同组用户的执行权限

	第三部分权限：非同组用户权限，文件或者目录的非同组用户对该文件拥有的权限
		参数 o
		举例 o-x 移除非同组用户的执行权限

	参数 a 表示所有用户
		a+rw 表示对所有用户开放读写
	
	多个命令之间使用 , 逗号分隔
		chmod u+x,g+w test.txt

对应这三种权限有三种访问情况，即为
	所有者来访问
	同组用户访问
	非同组用户访问
	依照访问的情况，使用相应的权限来限制

查看文件或者目录的权限
	ls -l 所列举的每行的 第一个信息 是其权限
	举例 -rw-r--r--   首位-表示文件 依次是一 二 三部分权限
	     drwxr-xr-x   首位d表示目录

一个文件创建出来时，默认权限是-rw-rw-r--
	即为 所有者可以读写，同组可以读写，非同组只读

特殊情况：root具有最高权限，可以将root理解为特殊的所有者，因为root账户可以随意切换到所有的普通用户
	而随意切换到普通用户一定涵盖了所有的组（空组除外）

	普通理解：
	即为一个文件的所有者不是root而是普通用户，所属组也不是root，
	但是权限中开放了所有者的read权限，那么使用root账户依旧可以read

	举例 文件： -r-------- zhangsan root
	使用root进行访问 属于同组用户，但是依旧可以read
	因为可以使用root用户切换到zhagnsan用户，完成read操作，权限满足。
	虽然root 属于 root组，在同组用户访问上，权限是不允许的---

	即为所有者拥有的权限，同组与非同组的权限 root账户都有

	某些情况下root创建的文件 权限设置为000 ，或者不是root所有，也不是同组的，root依旧可以打开查看删除等

特殊情况：目录的所有者权限一般不会更改，即为rwx，最高级别
	因为所有者需要确保完全控制该目录极其内容
	一般都会通过同组权限来进行限制，需要保护时，将同组权限设置为r-x，非同组设置为r--或---

修改文件或目录的权限
	chmod 权限位 文件名

使用数字来修饰权限
	三位数字           7              7            7
	从左到右对应：所有者权限  同组用户权限 非同组用户权限
	r  4  2^2
	w  2  2^1
	x  1  2^0

	rwx  -- 7 最高级别
	rw-  -- 6 读取和写入
	r-x  -- 5 读取和执行
	r--  -- 4 读取
	-wx  -- 3 写入和执行
	-w-  -- 2 写入
	--x  -- 1 执行
	---  -- 0 无权限

	命令 chmod 644 text.txt
		设置权限为 拥有者读写，其他只读

**********************************************************************************************
一个用户可以在多个组中，一个组中可以包含多个用户，可以说用户保存在组中

文件和目录的权限是通过用户的所有权和组所有权来管理的，
默认情况这些所有权是文件的权限位形式，更细粒度的是ACL
组中保存的是访问控制列表ACL，是组与文件的关联关系，而不是文件本身。不可以说文件保存在组中

访问控制列表（Access Control List，ACL）包含了用户、组、和为其定义的特定的权限、默认权限特殊权限等等
用于更加细粒度的权限控制

默认情况下，Linux中新建文件等操作，并不会给文件添加ACL，而是通过权限位来管理，即为ls -l查看到的
修改权限位，其ACL中acl权限部分并不受影响

手动给文件添加ACL权限
	setfacl -m user:username:rwx /home/user/newfile.txt
		将用户username的rwx权限，添加到newfile.txt文件中
	getfacl 文件名 查看
		输出：文件路径+标准权限部分（权限位）+扩展权限部分+ACL权限部分
	作用就是可以给特定用户来添加acl权限，和组管理相比更加细粒度，可以为不同的用户和组分配不同的权限
		比如新来一个用户，不能给与组权限那么宽广的权限，又要他处理某几个文件，可以使用ACL
		比如前期开发版本1.0 2.0 对新开发人员的用户屏蔽，只开放3.0的权限，但是原来1 2 3版本在同一个组中
		原开发人员可以借鉴(也可防竞争对手安插人手等)
		或者宝贵的运维数据等

外部系统导入Linux系统的文件，其默认权限为：
	文件：644 所有者可读写，其他用户只读
	目录：755 所有者可读写执行，其他用户可读执行

**********************************************************************************************
Linux中对网络的管理
	配置ip地址，修改对应的配置文件
	不知道了就查找一下 ls | prep sys      ls | prep net

	对于比较长的文件名或路径名，输入前几个字母，可以匹配上时，按TAB 可以自动补全
	
	cd /etc/sysconfig/network-scripts/ifcfg-ens33

	使用vim修改
	BOOTPROTO="static"

	IPADDR=192.168.214.129
	GATEWAY=
	DNS=

	注意 该配置需要root权限，然后重启网络服务
	重启linux  reboot

**********************************************************************************************
Linux中对进程的管理
	进程：一个程序的执行，一个进程会占用一个端口
	线程：一个程序的执行线路

・	查看（用户/应用）进程 ps   进程标识编号 PID
	ps -e 查看全部进程
	ps -ef 查看全格式的全部进程  UID 进程开启者 PID 进程标识 PPID 父进程标识 
	参数 f 表示以全格式显示

	可以用来查看一些应用是否开启，例如tomcat mysql等等
	ps -ef | prep tomcat
	注意此查找命令也算作一条进程记录

关闭进程
	kill PID 关闭进程标识为PID的进程
		参数 -sigterm
	kill -9 PID  -9表示强制关闭

**********************************************************************************************
Linux中对服务的管理
	服务是支持Linux运行的一些必要程序，本质上也是进程，叫守护进程。
	通常运行在后台，为应用程序提供必要支撑
	语法：
		systemctl [start stop restart reload status enable] 服务名称
	
	systemctl status firewall
	老版本中的指令service 新版中也是支持的

**********************************************************************************************
Linux中对RPM包管理
	RPM是一种Linux的软件包的打包和安装工具，后缀 .rpm
	命令：
	查看当前系统中所有已经安装的rpm软件包
		rpm -qa
		rpm -qa | grep firefox   过滤查找
	卸载rpm软件包
		rpm -e 精确的包名
	安装rpm软件包
		rpm -ivm 精确的包名.rpm
	检测更新
		rpm update

**********************************************************************************************
Linux中 YUM包管理
	是一种基于rpm的软件包管理工具，功能更加强大，拥有自己的服务器，自动下载rpm包并安装
	可以自动管理软件包间的依赖关系，
	命令：
	查看当前系统中所有已经安装的rpm软件包
		yum list installed
		yum list installed | grep firefox
	卸载rpm软件包
		yum remove 关键字
	安装rpm软件包
		yum install firefox 
		直接输入关键字即可

**********************************************************************************************
Linux实操，安装JDK tomcat mysql
	搭建JavaEE环境

1、安装JDK
	使用xftp5上传到/opt下并解压
		tar -zxvf jdk -C /opt

	配置环境变量，通过配置文件
		/etc/profile
		JAVA_HOME=/opt/jdk1.8.0_121
		PATH=%JAVA_HOME/bin:$PATH
		CLASSPATH=%JAVA_HOME/lib:.

		export JAVA_HOME PATH CLASSPATH

	使配置文件生效(重启也可)
		source profile
		也就使让Linux重新加载此配置文件

	编写HelloWorld.java并编译运行
		vim HelloWorld.java
		javac HelloWorld.java
		java HelloWorld
		正常输出
		
2、安装Tomcat
	使用xftp5上传到/opt下并解压
		tar -zxvf tomcat -C /opt
	测试启动
		进入 /opt/tomcat/bin
		./startup.sh
		启动tomcat
		正常输出 Tomcat started
		./shutdown.sh
		关闭tomcat
	查看进程
		ps -ef | prep tomcat
		启动时，可以查看到多条tomcat进程
		关闭后，只可以查看到查询进程 ps 这条的进程
	使用Linux内置的火狐浏览器访问本地端口
		http://127.0.0.1:8080
		正常显示tomcat欢迎页
	在windows上测试访问，使用Linux虚拟机的ip地址，需要关闭防火墙 
		http://192.168.214.129:8080
		systemctl stop firewalld

3、安装mysql
	卸载可能会发成冲突的 mariadb 数据库	
	检查： yum list installed | grep mariadb
	卸载： yum -y remove mariadb
		参数 -y  取消提示信息（默认yes）

	使用xftp5上传到/opt下并解压
		tar -zxvf mysql -C /opt
	修改解压后的根目录名（一种特殊的移动）
		mv 文件名 新文件名
	创建数据文件夹data
		在mysql-5.7.18文件夹目录下创建一个data文件夹
	创建用来执行mysqld命令的Linux用户(sql语句类型 DDL增删改 DQL查 DML建表 TCL事务 DCL管理用户)
		创建组
			groupadd mysql
		创建用户，并指定组
			useradd -g mysql mysql
	将mysql本体的目录和data目录的权限修改
		所有者 所有组均改为mysql
		权限777
	
	初始化mysql
		在bin目录下执行
		./mysqld --initialize --user=mysql --datadir=/opt/mysql-5.7.18/data --basedir=/opt/mysql-5.7.18
	参数说明--initialize 初始化mysql，创建mysql的root, 随机生成密码。记住密码，登录msyql使用。
		--user执行msyqld 命令的linux用户名
		--datadir : mysql数据文件的存放位置，目录位置参照本机的设置。
		--basedir : msyql安装程序的目录，目录位置参照本机的设置。
	********需要记住随机生成的密码：>&(5jHH9W:Sc  稍后登陆mysql后可以修改
	启用安全功能
		在bin目录下执行
		./mysql_ssl_rsa_setup --datadir=/opt/mysql-5.7.18/data
		生成安全证书
	
	启动mysql服务
		在bin目录下执行
		./mysqld_safe --user=mysql &
		确认msyql是否启动，查看进程使用 ps -ef | grep mysql  注意确认进程后的路径
	客户端登录mysql
		./mysql -uroot -p
		显示welcome to the mysql monitor 即为登录成功
	修改root账户密码
		alter user 'root'@'localhost' identified by '151290007';
	测试使用
		show databases;
		use mysql;
		show tables;
		DESC db;
		\h  帮助
		\c  清屏
		\q  退出
		...
	
	授权远程访问
		让其他计算机可以通过网络接口访问mysql
		grant all privileges on *.* to root@'%' identified by '151290007';
		其中 *.* 的第一个*表示所有数据库名，第二个*表示所有的数据库表；
		root@'%' 中的root表示用户名，%表示ip地址，
		%也可以指定具体的ip地址，比如 root@localhost, root@192.168.235.130 等
	更新权限信息
		mysql中执行flush刷新权限: flush privileges;
	关闭防火墙
		systemctl stop firewalld
		systemctl statux firewalld
			状态由activie 变为 inactive
	使用软件，例如navicat远程链接
		ip 192.168.214.129	
	
	关闭mysql服务
		./mysqladmin -uroot -p shutdown
		检查进程已无mysql safe

	修改数据库编码
		show variables where Variable_name like '%char%';
		将不是utf8的进行修改
		mysql中输入指令
		set character_set_client=utf8;
		set character_set_connection=utf8;
		set character_set_database=utf8;
		set character_set_results=utf8;
		set character_set_server=utf8;
		set character_set_system=utf8;
		创建实例时，均使用utf8，保证编码正确

**********************************************************************************************
Linux实操 部署并测试crm项目
	将数据库表导入mysql 导出sql脚本
	注意不同版本间的编码问题，如不同，可以在sql脚本中统一替换修改
	utf8mb4   utf8mb4_general_ci

	将crm项目打包成war包，部署到linux上的tomcat服务器中
		/opt/apache-tomcat-9.0.0.M26/webapps
		tomcat启动时，会自动进行解包

	注：测试项目时，将mysql密码改为 yf123

	使用本机和windows进行访问

	关闭mysql服务与tomcat服务
		./mysqladmin -uroot -p shutdown
		./shutdown.sh














